apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    compileSdkVersion rootProject.ext.version.compileSdkVersion
    buildToolsVersion rootProject.ext.version.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.version.applicationId
        minSdkVersion rootProject.ext.version.minSdkVersion
        targetSdkVersion rootProject.ext.version.targetSdkVersion
        versionCode rootProject.ext.version.versionCode
        versionName rootProject.ext.version.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    signingConfigs {
        release {
            storeFile file("../key/key.jks")
            storePassword "942672"
            keyAlias "key0"
            keyPassword "942672"
        }

        debug {
            storeFile file("../key/key.jks")
            storePassword "942672"
            keyAlias "key0"
            keyPassword "942672"
        }

    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation project(':libcommon')

    if(!Boolean.valueOf(rootProject.ext.isRunComponent)){
        implementation project(':music_component')
        implementation project(':video_component')
        implementation project(':news_component')
        implementation project(':picture_component')
    }
}

// 加入Tinker生成补丁包的gradle
apply from: 'buildTinker.gradle'
